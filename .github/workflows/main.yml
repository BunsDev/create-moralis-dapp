name: CI/CD

on:
  pull_request:
    branches:
      - main
      - beta
      - alpha
  push:
    branches:
      - main
      - beta
      - alpha

jobs:
  find_dependencies:
    name: Find missing dependencies - ${{ matrix.os }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Fetch Base Branch
        if: github.event_name == 'pull_request'
        run: git fetch --no-tags --prune --depth=5 origin ${{ github.base_ref }}

      - name: Set up Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Find missing dependencies
        run: node scripts/findMissingDependencies.js

  lint_and_format:
    name: Lint and Format - ${{ matrix.os }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Fetch Base Branch
        if: github.event_name == 'pull_request'
        run: git fetch --no-tags --prune --depth=5 origin ${{ github.base_ref }}

      - name: Set up Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Run ESLint on Affected Projects
        run: yarn nx affected --target=lint --base=origin/${{ github.base_ref }} --head=HEAD
        continue-on-error: true

      - name: Annotate ESLint Results
        uses: ataylorme/eslint-annotate-action@1.2.0
        continue-on-error: true
        with:
          repo-token: '${{ secrets.GITHUB_TOKEN }}'
          report-json: 'eslint_report.json'

      - name: Run Prettier on Affected Projects
        run: yarn nx affected --target=format:check --base=origin/${{ github.base_ref }} --head=HEAD

  build_and_test:
    needs: lint_and_format
    name: Build and Test - ${{ matrix.os }} - Node 16
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Fetch Base Branch
        if: github.event_name == 'pull_request'
        run: git fetch --no-tags --prune --depth=5 origin ${{ github.base_ref }}

      - name: Set up Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Cache Nx Build and Test Outputs
        uses: actions/cache@v3
        with:
          path: |
            node_modules/.cache/nx
            dist
          key: ${{ runner.os }}-nx-${{ hashFiles('**/nx.json') }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nx-${{ hashFiles('**/nx.json') }}-
            ${{ runner.os }}-nx-

      - name: Build and Test Affected Projects
        run: |
          yarn nx affected --target=build --base=origin/${{ github.base_ref }} --head=HEAD
          yarn nx affected --target=test --base=origin/${{ github.base_ref }} --head=HEAD
